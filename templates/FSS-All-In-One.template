AWSTemplateFormatVersion: 2010-09-09

Description: Trend Micro File Storage Security scanner and storage stacks

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "[ Customizable section ] You can modify the region from AWS navigation bar."
        Parameters:
          - S3BucketToScan
      - Label:
          default: "[ Warning: Do not modify the fields below. Modifications may cause your deployment to fail. ]"
        Parameters:
          - FSSBucketName
          - FSSKeyPrefix
          - TrendMicroManagementAccount
          - CloudOneRegion
          - ExternalID
          - LicenseLayer

    ParameterLabels:
      S3BucketToScan:
        default: S3BucketToScan
      FSSBucketName:
        default: Stack package location
      FSSKeyPrefix:
        default: Version
      TrendMicroManagementAccount:
        default: File Storage Security management account
      CloudOneRegion:
        default: Trend Micro Cloud One region
      ExternalID:
        default: ExternalID
      LicenseLayer:
        default: License Lambda layer

Parameters:
  S3BucketToScan:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: S3 bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Description: The S3 bucket to scan. Specify an existing S3 bucket.
    Type: String
  FSSBucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription:
      File Storage Security bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: file-storage-security
    Description: ""
    Type: String
  FSSKeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription:
      File Storage Security key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: latest/
    Description: ""
    Type: String
  LicenseLayer:
    Default: ""
    Description: ""
    Type: String
  CloudOneRegion:
    Description: The region of the Trend Micro Cloud One services. This region may be different from your stack's region.
    Type: String
    Default: us-east-1
    AllowedValues:
      - us-east-1
  TrendMicroManagementAccount:
    AllowedPattern: ^[0-9]*$
    ConstraintDescription: AWS account ID.
    Default: 415485722356
    Description: This account will be given permission to modify the stacks for upgrades and troubleshooting purposes.
    Type: String
  ExternalID:
    Description: "The primary function of the External ID is to address and prevent the 'confused deputy' problem."
    Type: String

Resources:
  StorageStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        S3BucketToScan: !Ref S3BucketToScan
        ScannerAWSAccount: !Ref AWS::AccountId
        ScannerSQSURL: !GetAtt ScannerStack.Outputs.ScannerQueueURL
        FSSBucketName: !Ref FSSBucketName
        FSSKeyPrefix: !Ref FSSKeyPrefix
        CloudOneRegion: !Ref CloudOneRegion
        TrendMicroManagementAccount: !Ref TrendMicroManagementAccount
        ExternalID: !Ref ExternalID
      Tags:
        - Key: Name
          Value: FSS-Storage-Stack
      TemplateURL:
        Fn::Sub: https://${FSSBucketName}.s3.amazonaws.com/${FSSKeyPrefix}templates/FSS-Storage-Stack.template
      TimeoutInMinutes: 30

  ScannerStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        BucketListenerRoleARNs: ""
        FSSBucketName: !Ref FSSBucketName
        FSSKeyPrefix: !Ref FSSKeyPrefix
        CloudOneRegion: !Ref CloudOneRegion
        TrendMicroManagementAccount: !Ref TrendMicroManagementAccount
        ExternalID: !Ref ExternalID
        LicenseLayer: !Ref LicenseLayer
      Tags:
        - Key: Name
          Value: FSS-Scanner-Stack
      TemplateURL:
        Fn::Sub: https://${FSSBucketName}.s3.amazonaws.com/${FSSKeyPrefix}templates/FSS-Scanner-Stack.template
      TimeoutInMinutes: 30

  SetupSQSRights:
    Type: Custom::SetupSQSRightsLambda
    Properties:
      ServiceToken: !GetAtt SetupSQSRightsLambda.Arn

  SetupSQSRightsLambda:
    Type: AWS::Lambda::Function
    Properties:
      Description: Sets rights for the lambda to push items into the queue
      Environment:
        Variables:
          LambdaRoleARN: !GetAtt StorageStack.Outputs.BucketListenerRoleARN
          SQSUrl: !GetAtt ScannerStack.Outputs.ScannerQueueURL
      Handler: index.lambda_handler
      Runtime: python3.7
      Role: !GetAtt SetupSQSRightsExecutionRole.Arn
      Timeout: 900
      Code:
        ZipFile: |
          import json
          import os
          import base64
          from botocore.vendored import requests
          import logging
          from datetime import datetime
          import boto3
          import cfnresponse
          import logging
          logger = logging.getLogger(__name__)
          def lambda_handler(event, context):
              logger.debug(event)
              status = cfnresponse.SUCCESS
              try:
                  if event['RequestType'] == 'Delete':
                      cfnresponse.send(event, context, status, {}, None)
                      return
                  SQSName = os.environ['SQSUrl']
                  lambdaRoleARN = os.environ['LambdaRoleARN']
                  client = boto3.client('sqs')

                  queue_attributes = client.get_queue_attributes(
                      QueueUrl=SQSName,
                      AttributeNames=['Policy'])

                  queue_policy = json.loads(queue_attributes['Attributes']['Policy'])

                  new_principal = {
                      "AWS": [ lambdaRoleARN ]
                  }
                  queue_policy['Statement'][0]['Principal'] = new_principal

                  client.set_queue_attributes(
                      QueueUrl=SQSName,
                      Attributes={
                          'Policy':json.dumps(queue_policy)
                      })
              except Exception:
                              logging.error('Unhandled exception', exc_info=True)
                              status = cfnresponse.FAILED
              finally:
                              cfnresponse.send(event, context, status, {}, None)

  SetupSQSRightsExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: SetupSQSRights
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sqs:GetQueueAttributes
                  - sqs:SetQueueAttributes
                Resource: arn:aws:sqs:*:*:*

Outputs:
  ScanningBucket:
    Value: !GetAtt StorageStack.Outputs.ScanningBucket
    Description: The name of the scanning bucket in storage stack.
  BucketListenerRoleARN:
    Value: !GetAtt StorageStack.Outputs.BucketListenerRoleARN
    Description: The ARNs of the lambda execution role for SQS in scanner stack to accept scan requests from.
  ScannerQueueURL:
    Value: !GetAtt ScannerStack.Outputs.ScannerQueueURL
    Description: The SQS URL for storage stacks to publish events to.
  ScannerStackManagementRoleARN:
    Value: !GetAtt ScannerStack.Outputs.ScannerStackManagementRoleARN
    Description: The ARN of the IAM role for File Storage Security backend services to manage the deployed resources.
  StorageStackManagementRoleARN:
    Value: !GetAtt StorageStack.Outputs.StorageStackManagementRoleARN
    Description: The ARN of the IAM role for File Storage Security backend services to manage the deployed resources.
